// Generated from KnowExtLexer.g4 by ANTLR 4.7.1
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KnowExtLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BOOLEAN=1, BYTE=2, BREAK=3, CASE=4, CATCH=5, CHAR=6, CONTINUE=7, DEFAULT=8, 
		DO=9, HTMLDOCUMENT=10, DOUBLE=11, ELSE=12, FLOAT=13, FOR=14, IF=15, INT=16, 
		LIST=17, LONG=18, MATRIX=19, NEW=20, RETURN=21, SHORT=22, SWITCH=23, WHILE=24, 
		TREE=25, THROW=26, TRY=27, VOID=28, UNION=29, SELECT=30, SET=31, PROJECT=32, 
		PRODUCT=33, GROUP=34, AGGREGATE=35, RENAME=36, REORDER=37, DECIMAL_LITERAL=38, 
		FLOAT_LITERAL=39, BOOL_LITERAL=40, CHAR_LITERAL=41, STRING_LITERAL=42, 
		NULL_LITERAL=43, LPAREN=44, RPAREN=45, LBRACE=46, RBRACE=47, LBRACK=48, 
		RBRACK=49, SEMI=50, COMMA=51, DOT=52, ASSIGN=53, GT=54, LT=55, BANG=56, 
		TILDE=57, QUESTION=58, COLON=59, EQUAL=60, LE=61, GE=62, NOTEQUAL=63, 
		AND=64, OR=65, INC=66, DEC=67, ADD=68, SUB=69, MUL=70, DIV=71, BITAND=72, 
		BITOR=73, CARET=74, MOD=75, ADD_ASSIGN=76, SUB_ASSIGN=77, MUL_ASSIGN=78, 
		DIV_ASSIGN=79, AND_ASSIGN=80, OR_ASSIGN=81, XOR_ASSIGN=82, MOD_ASSIGN=83, 
		LSHIFT_ASSIGN=84, RSHIFT_ASSIGN=85, URSHIFT_ASSIGN=86, WS=87, COMMENT=88, 
		LINE_COMMENT=89, IDENTIFIER=90;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"BOOLEAN", "BYTE", "BREAK", "CASE", "CATCH", "CHAR", "CONTINUE", "DEFAULT", 
		"DO", "HTMLDOCUMENT", "DOUBLE", "ELSE", "FLOAT", "FOR", "IF", "INT", "LIST", 
		"LONG", "MATRIX", "NEW", "RETURN", "SHORT", "SWITCH", "WHILE", "TREE", 
		"THROW", "TRY", "VOID", "UNION", "SELECT", "SET", "PROJECT", "PRODUCT", 
		"GROUP", "AGGREGATE", "RENAME", "REORDER", "DECIMAL_LITERAL", "FLOAT_LITERAL", 
		"BOOL_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", "NULL_LITERAL", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", 
		"ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", "EQUAL", "LE", 
		"GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", "SUB", "MUL", "DIV", 
		"BITAND", "BITOR", "CARET", "MOD", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", 
		"RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", 
		"ExponentPart", "EscapeSequence", "Digits", "LetterOrDigit", "Letter"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'boolean'", "'byte'", "'break'", "'case'", "'catch'", "'char'", 
		"'continue'", "'default'", "'do'", "'HtmlDocument'", "'double'", "'else'", 
		"'float'", "'for'", "'if'", "'int'", "'list'", "'long'", "'matrix'", "'new'", 
		"'return'", "'short'", "'switch'", "'while'", "'Tree'", "'throw'", "'try'", 
		"'void'", "'union'", "'select'", "'set'", "'project'", "'product'", "'group'", 
		"'aggregate'", "'rename'", "'reorder'", null, null, null, null, null, 
		"'null'", "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "','", "'.'", 
		"'='", "'>'", "'<'", "'!'", "'~'", "'?'", "':'", "'=='", "'<='", "'>='", 
		"'!='", "'&&'", "'||'", "'++'", "'--'", "'+'", "'-'", "'*'", "'/'", "'&'", 
		"'|'", "'^'", "'%'", "'+='", "'-='", "'*='", "'/='", "'&='", "'|='", "'^='", 
		"'%='", "'<<='", "'>>='", "'>>>='"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "BOOLEAN", "BYTE", "BREAK", "CASE", "CATCH", "CHAR", "CONTINUE", 
		"DEFAULT", "DO", "HTMLDOCUMENT", "DOUBLE", "ELSE", "FLOAT", "FOR", "IF", 
		"INT", "LIST", "LONG", "MATRIX", "NEW", "RETURN", "SHORT", "SWITCH", "WHILE", 
		"TREE", "THROW", "TRY", "VOID", "UNION", "SELECT", "SET", "PROJECT", "PRODUCT", 
		"GROUP", "AGGREGATE", "RENAME", "REORDER", "DECIMAL_LITERAL", "FLOAT_LITERAL", 
		"BOOL_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", "NULL_LITERAL", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", 
		"ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", "EQUAL", "LE", 
		"GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", "SUB", "MUL", "DIV", 
		"BITAND", "BITOR", "CARET", "MOD", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", 
		"RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KnowExtLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KnowExtLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\\\u02ab\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7"+
		"\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&"+
		"\3&\3&\3\'\3\'\3\'\5\'\u01a9\n\'\3\'\6\'\u01ac\n\'\r\'\16\'\u01ad\3\'"+
		"\5\'\u01b1\n\'\5\'\u01b3\n\'\3\'\5\'\u01b6\n\'\3(\3(\3(\5(\u01bb\n(\3"+
		"(\3(\5(\u01bf\n(\3(\5(\u01c2\n(\3(\5(\u01c5\n(\3(\3(\3(\5(\u01ca\n(\3"+
		"(\5(\u01cd\n(\5(\u01cf\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u01da\n)\3*\3"+
		"*\3*\5*\u01df\n*\3*\3*\3+\3+\3+\7+\u01e6\n+\f+\16+\u01e9\13+\3+\3+\3,"+
		"\3,\3,\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63"+
		"\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3"+
		"<\3=\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3@\3A\3A\3A\3B\3B\3B\3C\3C\3C\3D\3"+
		"D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3M\3M\3M\3N\3N\3"+
		"N\3O\3O\3O\3P\3P\3P\3Q\3Q\3Q\3R\3R\3R\3S\3S\3S\3T\3T\3T\3U\3U\3U\3U\3"+
		"V\3V\3V\3V\3W\3W\3W\3W\3W\3X\6X\u0260\nX\rX\16X\u0261\3X\3X\3Y\3Y\3Y\3"+
		"Y\7Y\u026a\nY\fY\16Y\u026d\13Y\3Y\3Y\3Y\3Y\3Y\3Z\3Z\3Z\3Z\7Z\u0278\nZ"+
		"\fZ\16Z\u027b\13Z\3Z\3Z\3[\3[\7[\u0281\n[\f[\16[\u0284\13[\3\\\3\\\5\\"+
		"\u0288\n\\\3\\\3\\\3]\3]\3]\3]\5]\u0290\n]\3]\5]\u0293\n]\3]\5]\u0296"+
		"\n]\3^\3^\7^\u029a\n^\f^\16^\u029d\13^\3^\5^\u02a0\n^\3_\3_\5_\u02a4\n"+
		"_\3`\3`\3`\3`\5`\u02aa\n`\3\u026b\2a\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083"+
		"C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\u0097"+
		"M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\u00a5T\u00a7U\u00a9V\u00ab"+
		"W\u00adX\u00afY\u00b1Z\u00b3[\u00b5\\\u00b7\2\u00b9\2\u00bb\2\u00bd\2"+
		"\u00bf\2\3\2\24\3\2\63;\4\2NNnn\6\2FFHHffhh\6\2\f\f\17\17))^^\6\2\f\f"+
		"\17\17$$^^\5\2\13\f\16\17\"\"\4\2\f\f\17\17\4\2GGgg\4\2--//\n\2$$))^^"+
		"ddhhppttvv\3\2\62\65\3\2\629\3\2\62;\4\2\62;aa\6\2&&C\\aac|\4\2\2\u0081"+
		"\ud802\udc01\3\2\ud802\udc01\3\2\udc02\ue001\2\u02c2\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2"+
		"e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3"+
		"\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2"+
		"\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087"+
		"\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2"+
		"\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099"+
		"\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2"+
		"\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab"+
		"\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2"+
		"\2\2\u00b5\3\2\2\2\3\u00c1\3\2\2\2\5\u00c9\3\2\2\2\7\u00ce\3\2\2\2\t\u00d4"+
		"\3\2\2\2\13\u00d9\3\2\2\2\r\u00df\3\2\2\2\17\u00e4\3\2\2\2\21\u00ed\3"+
		"\2\2\2\23\u00f5\3\2\2\2\25\u00f8\3\2\2\2\27\u0105\3\2\2\2\31\u010c\3\2"+
		"\2\2\33\u0111\3\2\2\2\35\u0117\3\2\2\2\37\u011b\3\2\2\2!\u011e\3\2\2\2"+
		"#\u0122\3\2\2\2%\u0127\3\2\2\2\'\u012c\3\2\2\2)\u0133\3\2\2\2+\u0137\3"+
		"\2\2\2-\u013e\3\2\2\2/\u0144\3\2\2\2\61\u014b\3\2\2\2\63\u0151\3\2\2\2"+
		"\65\u0156\3\2\2\2\67\u015c\3\2\2\29\u0160\3\2\2\2;\u0165\3\2\2\2=\u016b"+
		"\3\2\2\2?\u0172\3\2\2\2A\u0176\3\2\2\2C\u017e\3\2\2\2E\u0186\3\2\2\2G"+
		"\u018c\3\2\2\2I\u0196\3\2\2\2K\u019d\3\2\2\2M\u01b2\3\2\2\2O\u01ce\3\2"+
		"\2\2Q\u01d9\3\2\2\2S\u01db\3\2\2\2U\u01e2\3\2\2\2W\u01ec\3\2\2\2Y\u01f1"+
		"\3\2\2\2[\u01f3\3\2\2\2]\u01f5\3\2\2\2_\u01f7\3\2\2\2a\u01f9\3\2\2\2c"+
		"\u01fb\3\2\2\2e\u01fd\3\2\2\2g\u01ff\3\2\2\2i\u0201\3\2\2\2k\u0203\3\2"+
		"\2\2m\u0205\3\2\2\2o\u0207\3\2\2\2q\u0209\3\2\2\2s\u020b\3\2\2\2u\u020d"+
		"\3\2\2\2w\u020f\3\2\2\2y\u0211\3\2\2\2{\u0214\3\2\2\2}\u0217\3\2\2\2\177"+
		"\u021a\3\2\2\2\u0081\u021d\3\2\2\2\u0083\u0220\3\2\2\2\u0085\u0223\3\2"+
		"\2\2\u0087\u0226\3\2\2\2\u0089\u0229\3\2\2\2\u008b\u022b\3\2\2\2\u008d"+
		"\u022d\3\2\2\2\u008f\u022f\3\2\2\2\u0091\u0231\3\2\2\2\u0093\u0233\3\2"+
		"\2\2\u0095\u0235\3\2\2\2\u0097\u0237\3\2\2\2\u0099\u0239\3\2\2\2\u009b"+
		"\u023c\3\2\2\2\u009d\u023f\3\2\2\2\u009f\u0242\3\2\2\2\u00a1\u0245\3\2"+
		"\2\2\u00a3\u0248\3\2\2\2\u00a5\u024b\3\2\2\2\u00a7\u024e\3\2\2\2\u00a9"+
		"\u0251\3\2\2\2\u00ab\u0255\3\2\2\2\u00ad\u0259\3\2\2\2\u00af\u025f\3\2"+
		"\2\2\u00b1\u0265\3\2\2\2\u00b3\u0273\3\2\2\2\u00b5\u027e\3\2\2\2\u00b7"+
		"\u0285\3\2\2\2\u00b9\u0295\3\2\2\2\u00bb\u0297\3\2\2\2\u00bd\u02a3\3\2"+
		"\2\2\u00bf\u02a9\3\2\2\2\u00c1\u00c2\7d\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4"+
		"\7q\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7c\2\2\u00c7"+
		"\u00c8\7p\2\2\u00c8\4\3\2\2\2\u00c9\u00ca\7d\2\2\u00ca\u00cb\7{\2\2\u00cb"+
		"\u00cc\7v\2\2\u00cc\u00cd\7g\2\2\u00cd\6\3\2\2\2\u00ce\u00cf\7d\2\2\u00cf"+
		"\u00d0\7t\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7m\2\2"+
		"\u00d3\b\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7\7u"+
		"\2\2\u00d7\u00d8\7g\2\2\u00d8\n\3\2\2\2\u00d9\u00da\7e\2\2\u00da\u00db"+
		"\7c\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7e\2\2\u00dd\u00de\7j\2\2\u00de"+
		"\f\3\2\2\2\u00df\u00e0\7e\2\2\u00e0\u00e1\7j\2\2\u00e1\u00e2\7c\2\2\u00e2"+
		"\u00e3\7t\2\2\u00e3\16\3\2\2\2\u00e4\u00e5\7e\2\2\u00e5\u00e6\7q\2\2\u00e6"+
		"\u00e7\7p\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7p\2\2"+
		"\u00ea\u00eb\7w\2\2\u00eb\u00ec\7g\2\2\u00ec\20\3\2\2\2\u00ed\u00ee\7"+
		"f\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0\7h\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2"+
		"\7w\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4\7v\2\2\u00f4\22\3\2\2\2\u00f5\u00f6"+
		"\7f\2\2\u00f6\u00f7\7q\2\2\u00f7\24\3\2\2\2\u00f8\u00f9\7J\2\2\u00f9\u00fa"+
		"\7v\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc\7n\2\2\u00fc\u00fd\7F\2\2\u00fd"+
		"\u00fe\7q\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100\7w\2\2\u0100\u0101\7o\2\2"+
		"\u0101\u0102\7g\2\2\u0102\u0103\7p\2\2\u0103\u0104\7v\2\2\u0104\26\3\2"+
		"\2\2\u0105\u0106\7f\2\2\u0106\u0107\7q\2\2\u0107\u0108\7w\2\2\u0108\u0109"+
		"\7d\2\2\u0109\u010a\7n\2\2\u010a\u010b\7g\2\2\u010b\30\3\2\2\2\u010c\u010d"+
		"\7g\2\2\u010d\u010e\7n\2\2\u010e\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110"+
		"\32\3\2\2\2\u0111\u0112\7h\2\2\u0112\u0113\7n\2\2\u0113\u0114\7q\2\2\u0114"+
		"\u0115\7c\2\2\u0115\u0116\7v\2\2\u0116\34\3\2\2\2\u0117\u0118\7h\2\2\u0118"+
		"\u0119\7q\2\2\u0119\u011a\7t\2\2\u011a\36\3\2\2\2\u011b\u011c\7k\2\2\u011c"+
		"\u011d\7h\2\2\u011d \3\2\2\2\u011e\u011f\7k\2\2\u011f\u0120\7p\2\2\u0120"+
		"\u0121\7v\2\2\u0121\"\3\2\2\2\u0122\u0123\7n\2\2\u0123\u0124\7k\2\2\u0124"+
		"\u0125\7u\2\2\u0125\u0126\7v\2\2\u0126$\3\2\2\2\u0127\u0128\7n\2\2\u0128"+
		"\u0129\7q\2\2\u0129\u012a\7p\2\2\u012a\u012b\7i\2\2\u012b&\3\2\2\2\u012c"+
		"\u012d\7o\2\2\u012d\u012e\7c\2\2\u012e\u012f\7v\2\2\u012f\u0130\7t\2\2"+
		"\u0130\u0131\7k\2\2\u0131\u0132\7z\2\2\u0132(\3\2\2\2\u0133\u0134\7p\2"+
		"\2\u0134\u0135\7g\2\2\u0135\u0136\7y\2\2\u0136*\3\2\2\2\u0137\u0138\7"+
		"t\2\2\u0138\u0139\7g\2\2\u0139\u013a\7v\2\2\u013a\u013b\7w\2\2\u013b\u013c"+
		"\7t\2\2\u013c\u013d\7p\2\2\u013d,\3\2\2\2\u013e\u013f\7u\2\2\u013f\u0140"+
		"\7j\2\2\u0140\u0141\7q\2\2\u0141\u0142\7t\2\2\u0142\u0143\7v\2\2\u0143"+
		".\3\2\2\2\u0144\u0145\7u\2\2\u0145\u0146\7y\2\2\u0146\u0147\7k\2\2\u0147"+
		"\u0148\7v\2\2\u0148\u0149\7e\2\2\u0149\u014a\7j\2\2\u014a\60\3\2\2\2\u014b"+
		"\u014c\7y\2\2\u014c\u014d\7j\2\2\u014d\u014e\7k\2\2\u014e\u014f\7n\2\2"+
		"\u014f\u0150\7g\2\2\u0150\62\3\2\2\2\u0151\u0152\7V\2\2\u0152\u0153\7"+
		"t\2\2\u0153\u0154\7g\2\2\u0154\u0155\7g\2\2\u0155\64\3\2\2\2\u0156\u0157"+
		"\7v\2\2\u0157\u0158\7j\2\2\u0158\u0159\7t\2\2\u0159\u015a\7q\2\2\u015a"+
		"\u015b\7y\2\2\u015b\66\3\2\2\2\u015c\u015d\7v\2\2\u015d\u015e\7t\2\2\u015e"+
		"\u015f\7{\2\2\u015f8\3\2\2\2\u0160\u0161\7x\2\2\u0161\u0162\7q\2\2\u0162"+
		"\u0163\7k\2\2\u0163\u0164\7f\2\2\u0164:\3\2\2\2\u0165\u0166\7w\2\2\u0166"+
		"\u0167\7p\2\2\u0167\u0168\7k\2\2\u0168\u0169\7q\2\2\u0169\u016a\7p\2\2"+
		"\u016a<\3\2\2\2\u016b\u016c\7u\2\2\u016c\u016d\7g\2\2\u016d\u016e\7n\2"+
		"\2\u016e\u016f\7g\2\2\u016f\u0170\7e\2\2\u0170\u0171\7v\2\2\u0171>\3\2"+
		"\2\2\u0172\u0173\7u\2\2\u0173\u0174\7g\2\2\u0174\u0175\7v\2\2\u0175@\3"+
		"\2\2\2\u0176\u0177\7r\2\2\u0177\u0178\7t\2\2\u0178\u0179\7q\2\2\u0179"+
		"\u017a\7l\2\2\u017a\u017b\7g\2\2\u017b\u017c\7e\2\2\u017c\u017d\7v\2\2"+
		"\u017dB\3\2\2\2\u017e\u017f\7r\2\2\u017f\u0180\7t\2\2\u0180\u0181\7q\2"+
		"\2\u0181\u0182\7f\2\2\u0182\u0183\7w\2\2\u0183\u0184\7e\2\2\u0184\u0185"+
		"\7v\2\2\u0185D\3\2\2\2\u0186\u0187\7i\2\2\u0187\u0188\7t\2\2\u0188\u0189"+
		"\7q\2\2\u0189\u018a\7w\2\2\u018a\u018b\7r\2\2\u018bF\3\2\2\2\u018c\u018d"+
		"\7c\2\2\u018d\u018e\7i\2\2\u018e\u018f\7i\2\2\u018f\u0190\7t\2\2\u0190"+
		"\u0191\7g\2\2\u0191\u0192\7i\2\2\u0192\u0193\7c\2\2\u0193\u0194\7v\2\2"+
		"\u0194\u0195\7g\2\2\u0195H\3\2\2\2\u0196\u0197\7t\2\2\u0197\u0198\7g\2"+
		"\2\u0198\u0199\7p\2\2\u0199\u019a\7c\2\2\u019a\u019b\7o\2\2\u019b\u019c"+
		"\7g\2\2\u019cJ\3\2\2\2\u019d\u019e\7t\2\2\u019e\u019f\7g\2\2\u019f\u01a0"+
		"\7q\2\2\u01a0\u01a1\7t\2\2\u01a1\u01a2\7f\2\2\u01a2\u01a3\7g\2\2\u01a3"+
		"\u01a4\7t\2\2\u01a4L\3\2\2\2\u01a5\u01b3\7\62\2\2\u01a6\u01b0\t\2\2\2"+
		"\u01a7\u01a9\5\u00bb^\2\u01a8\u01a7\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9"+
		"\u01b1\3\2\2\2\u01aa\u01ac\7a\2\2\u01ab\u01aa\3\2\2\2\u01ac\u01ad\3\2"+
		"\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af\3\2\2\2\u01af"+
		"\u01b1\5\u00bb^\2\u01b0\u01a8\3\2\2\2\u01b0\u01ab\3\2\2\2\u01b1\u01b3"+
		"\3\2\2\2\u01b2\u01a5\3\2\2\2\u01b2\u01a6\3\2\2\2\u01b3\u01b5\3\2\2\2\u01b4"+
		"\u01b6\t\3\2\2\u01b5\u01b4\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6N\3\2\2\2"+
		"\u01b7\u01b8\5\u00bb^\2\u01b8\u01ba\7\60\2\2\u01b9\u01bb\5\u00bb^\2\u01ba"+
		"\u01b9\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bf\3\2\2\2\u01bc\u01bd\7\60"+
		"\2\2\u01bd\u01bf\5\u00bb^\2\u01be\u01b7\3\2\2\2\u01be\u01bc\3\2\2\2\u01bf"+
		"\u01c1\3\2\2\2\u01c0\u01c2\5\u00b7\\\2\u01c1\u01c0\3\2\2\2\u01c1\u01c2"+
		"\3\2\2\2\u01c2\u01c4\3\2\2\2\u01c3\u01c5\t\4\2\2\u01c4\u01c3\3\2\2\2\u01c4"+
		"\u01c5\3\2\2\2\u01c5\u01cf\3\2\2\2\u01c6\u01cc\5\u00bb^\2\u01c7\u01c9"+
		"\5\u00b7\\\2\u01c8\u01ca\t\4\2\2\u01c9\u01c8\3\2\2\2\u01c9\u01ca\3\2\2"+
		"\2\u01ca\u01cd\3\2\2\2\u01cb\u01cd\t\4\2\2\u01cc\u01c7\3\2\2\2\u01cc\u01cb"+
		"\3\2\2\2\u01cd\u01cf\3\2\2\2\u01ce\u01be\3\2\2\2\u01ce\u01c6\3\2\2\2\u01cf"+
		"P\3\2\2\2\u01d0\u01d1\7v\2\2\u01d1\u01d2\7t\2\2\u01d2\u01d3\7w\2\2\u01d3"+
		"\u01da\7g\2\2\u01d4\u01d5\7h\2\2\u01d5\u01d6\7c\2\2\u01d6\u01d7\7n\2\2"+
		"\u01d7\u01d8\7u\2\2\u01d8\u01da\7g\2\2\u01d9\u01d0\3\2\2\2\u01d9\u01d4"+
		"\3\2\2\2\u01daR\3\2\2\2\u01db\u01de\7)\2\2\u01dc\u01df\n\5\2\2\u01dd\u01df"+
		"\5\u00b9]\2\u01de\u01dc\3\2\2\2\u01de\u01dd\3\2\2\2\u01df\u01e0\3\2\2"+
		"\2\u01e0\u01e1\7)\2\2\u01e1T\3\2\2\2\u01e2\u01e7\7$\2\2\u01e3\u01e6\n"+
		"\6\2\2\u01e4\u01e6\5\u00b9]\2\u01e5\u01e3\3\2\2\2\u01e5\u01e4\3\2\2\2"+
		"\u01e6\u01e9\3\2\2\2\u01e7\u01e5\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u01ea"+
		"\3\2\2\2\u01e9\u01e7\3\2\2\2\u01ea\u01eb\7$\2\2\u01ebV\3\2\2\2\u01ec\u01ed"+
		"\7p\2\2\u01ed\u01ee\7w\2\2\u01ee\u01ef\7n\2\2\u01ef\u01f0\7n\2\2\u01f0"+
		"X\3\2\2\2\u01f1\u01f2\7*\2\2\u01f2Z\3\2\2\2\u01f3\u01f4\7+\2\2\u01f4\\"+
		"\3\2\2\2\u01f5\u01f6\7}\2\2\u01f6^\3\2\2\2\u01f7\u01f8\7\177\2\2\u01f8"+
		"`\3\2\2\2\u01f9\u01fa\7]\2\2\u01fab\3\2\2\2\u01fb\u01fc\7_\2\2\u01fcd"+
		"\3\2\2\2\u01fd\u01fe\7=\2\2\u01fef\3\2\2\2\u01ff\u0200\7.\2\2\u0200h\3"+
		"\2\2\2\u0201\u0202\7\60\2\2\u0202j\3\2\2\2\u0203\u0204\7?\2\2\u0204l\3"+
		"\2\2\2\u0205\u0206\7@\2\2\u0206n\3\2\2\2\u0207\u0208\7>\2\2\u0208p\3\2"+
		"\2\2\u0209\u020a\7#\2\2\u020ar\3\2\2\2\u020b\u020c\7\u0080\2\2\u020ct"+
		"\3\2\2\2\u020d\u020e\7A\2\2\u020ev\3\2\2\2\u020f\u0210\7<\2\2\u0210x\3"+
		"\2\2\2\u0211\u0212\7?\2\2\u0212\u0213\7?\2\2\u0213z\3\2\2\2\u0214\u0215"+
		"\7>\2\2\u0215\u0216\7?\2\2\u0216|\3\2\2\2\u0217\u0218\7@\2\2\u0218\u0219"+
		"\7?\2\2\u0219~\3\2\2\2\u021a\u021b\7#\2\2\u021b\u021c\7?\2\2\u021c\u0080"+
		"\3\2\2\2\u021d\u021e\7(\2\2\u021e\u021f\7(\2\2\u021f\u0082\3\2\2\2\u0220"+
		"\u0221\7~\2\2\u0221\u0222\7~\2\2\u0222\u0084\3\2\2\2\u0223\u0224\7-\2"+
		"\2\u0224\u0225\7-\2\2\u0225\u0086\3\2\2\2\u0226\u0227\7/\2\2\u0227\u0228"+
		"\7/\2\2\u0228\u0088\3\2\2\2\u0229\u022a\7-\2\2\u022a\u008a\3\2\2\2\u022b"+
		"\u022c\7/\2\2\u022c\u008c\3\2\2\2\u022d\u022e\7,\2\2\u022e\u008e\3\2\2"+
		"\2\u022f\u0230\7\61\2\2\u0230\u0090\3\2\2\2\u0231\u0232\7(\2\2\u0232\u0092"+
		"\3\2\2\2\u0233\u0234\7~\2\2\u0234\u0094\3\2\2\2\u0235\u0236\7`\2\2\u0236"+
		"\u0096\3\2\2\2\u0237\u0238\7\'\2\2\u0238\u0098\3\2\2\2\u0239\u023a\7-"+
		"\2\2\u023a\u023b\7?\2\2\u023b\u009a\3\2\2\2\u023c\u023d\7/\2\2\u023d\u023e"+
		"\7?\2\2\u023e\u009c\3\2\2\2\u023f\u0240\7,\2\2\u0240\u0241\7?\2\2\u0241"+
		"\u009e\3\2\2\2\u0242\u0243\7\61\2\2\u0243\u0244\7?\2\2\u0244\u00a0\3\2"+
		"\2\2\u0245\u0246\7(\2\2\u0246\u0247\7?\2\2\u0247\u00a2\3\2\2\2\u0248\u0249"+
		"\7~\2\2\u0249\u024a\7?\2\2\u024a\u00a4\3\2\2\2\u024b\u024c\7`\2\2\u024c"+
		"\u024d\7?\2\2\u024d\u00a6\3\2\2\2\u024e\u024f\7\'\2\2\u024f\u0250\7?\2"+
		"\2\u0250\u00a8\3\2\2\2\u0251\u0252\7>\2\2\u0252\u0253\7>\2\2\u0253\u0254"+
		"\7?\2\2\u0254\u00aa\3\2\2\2\u0255\u0256\7@\2\2\u0256\u0257\7@\2\2\u0257"+
		"\u0258\7?\2\2\u0258\u00ac\3\2\2\2\u0259\u025a\7@\2\2\u025a\u025b\7@\2"+
		"\2\u025b\u025c\7@\2\2\u025c\u025d\7?\2\2\u025d\u00ae\3\2\2\2\u025e\u0260"+
		"\t\7\2\2\u025f\u025e\3\2\2\2\u0260\u0261\3\2\2\2\u0261\u025f\3\2\2\2\u0261"+
		"\u0262\3\2\2\2\u0262\u0263\3\2\2\2\u0263\u0264\bX\2\2\u0264\u00b0\3\2"+
		"\2\2\u0265\u0266\7\61\2\2\u0266\u0267\7,\2\2\u0267\u026b\3\2\2\2\u0268"+
		"\u026a\13\2\2\2\u0269\u0268\3\2\2\2\u026a\u026d\3\2\2\2\u026b\u026c\3"+
		"\2\2\2\u026b\u0269\3\2\2\2\u026c\u026e\3\2\2\2\u026d\u026b\3\2\2\2\u026e"+
		"\u026f\7,\2\2\u026f\u0270\7\61\2\2\u0270\u0271\3\2\2\2\u0271\u0272\bY"+
		"\2\2\u0272\u00b2\3\2\2\2\u0273\u0274\7\61\2\2\u0274\u0275\7\61\2\2\u0275"+
		"\u0279\3\2\2\2\u0276\u0278\n\b\2\2\u0277\u0276\3\2\2\2\u0278\u027b\3\2"+
		"\2\2\u0279\u0277\3\2\2\2\u0279\u027a\3\2\2\2\u027a\u027c\3\2\2\2\u027b"+
		"\u0279\3\2\2\2\u027c\u027d\bZ\2\2\u027d\u00b4\3\2\2\2\u027e\u0282\5\u00bf"+
		"`\2\u027f\u0281\5\u00bd_\2\u0280\u027f\3\2\2\2\u0281\u0284\3\2\2\2\u0282"+
		"\u0280\3\2\2\2\u0282\u0283\3\2\2\2\u0283\u00b6\3\2\2\2\u0284\u0282\3\2"+
		"\2\2\u0285\u0287\t\t\2\2\u0286\u0288\t\n\2\2\u0287\u0286\3\2\2\2\u0287"+
		"\u0288\3\2\2\2\u0288\u0289\3\2\2\2\u0289\u028a\5\u00bb^\2\u028a\u00b8"+
		"\3\2\2\2\u028b\u028c\7^\2\2\u028c\u0296\t\13\2\2\u028d\u0292\7^\2\2\u028e"+
		"\u0290\t\f\2\2\u028f\u028e\3\2\2\2\u028f\u0290\3\2\2\2\u0290\u0291\3\2"+
		"\2\2\u0291\u0293\t\r\2\2\u0292\u028f\3\2\2\2\u0292\u0293\3\2\2\2\u0293"+
		"\u0294\3\2\2\2\u0294\u0296\t\r\2\2\u0295\u028b\3\2\2\2\u0295\u028d\3\2"+
		"\2\2\u0296\u00ba\3\2\2\2\u0297\u029f\t\16\2\2\u0298\u029a\t\17\2\2\u0299"+
		"\u0298\3\2\2\2\u029a\u029d\3\2\2\2\u029b\u0299\3\2\2\2\u029b\u029c\3\2"+
		"\2\2\u029c\u029e\3\2\2\2\u029d\u029b\3\2\2\2\u029e\u02a0\t\16\2\2\u029f"+
		"\u029b\3\2\2\2\u029f\u02a0\3\2\2\2\u02a0\u00bc\3\2\2\2\u02a1\u02a4\5\u00bf"+
		"`\2\u02a2\u02a4\t\16\2\2\u02a3\u02a1\3\2\2\2\u02a3\u02a2\3\2\2\2\u02a4"+
		"\u00be\3\2\2\2\u02a5\u02aa\t\20\2\2\u02a6\u02aa\n\21\2\2\u02a7\u02a8\t"+
		"\22\2\2\u02a8\u02aa\t\23\2\2\u02a9\u02a5\3\2\2\2\u02a9\u02a6\3\2\2\2\u02a9"+
		"\u02a7\3\2\2\2\u02aa\u00c0\3\2\2\2\37\2\u01a8\u01ad\u01b0\u01b2\u01b5"+
		"\u01ba\u01be\u01c1\u01c4\u01c9\u01cc\u01ce\u01d9\u01de\u01e5\u01e7\u0261"+
		"\u026b\u0279\u0282\u0287\u028f\u0292\u0295\u029b\u029f\u02a3\u02a9\3\2"+
		"\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}